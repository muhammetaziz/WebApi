// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductsAPI.Models;

#nullable disable

namespace ProductsAPI.Migrations
{
    [DbContext(typeof(ProductsContext))]
    partial class ProductsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductsAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            IsActive = true,
                            Price = 15890m,
                            ProductName = "Samsung"
                        },
                        new
                        {
                            ProductId = 2,
                            IsActive = true,
                            Price = 21222m,
                            ProductName = "IPhone"
                        },
                        new
                        {
                            ProductId = 3,
                            IsActive = true,
                            Price = 41890m,
                            ProductName = "Redmi"
                        },
                        new
                        {
                            ProductId = 4,
                            IsActive = false,
                            Price = 123890m,
                            ProductName = "Vestel"
                        },
                        new
                        {
                            ProductId = 5,
                            IsActive = true,
                            Price = 51222m,
                            ProductName = "Xiomi"
                        },
                        new
                        {
                            ProductId = 6,
                            IsActive = false,
                            Price = 132m,
                            ProductName = "SonyEricson"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
